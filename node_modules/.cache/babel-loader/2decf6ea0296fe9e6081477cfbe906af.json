{"ast":null,"code":"import firebase from \"../../config/firebase\";\nexport const getAllProducts = () => {\n  return dispatch => {\n    firebase.database().ref(\"/\").child(\"allassets\").get().then(snapshot => {\n      if (snapshot.exists()) {\n        var data = snapshot.val();\n        console.log(Object.values(data));\n        dispatch({\n          type: \"SETPRODUCT\",\n          payload: Object.values(data)\n        });\n      } else {\n        console.log(\"No data available\");\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n}; //   export const filterCategory = (category) => {\n//     return(dispatch) => {\n//      dispatch({type: 'FILTERCATEGOR', payload: category})\n//    }\n//   }","map":{"version":3,"sources":["C:/Users/Jony/OneDrive/Desktop/bebsha-lagbe-jony/src/Redux/Actions/Product.js"],"names":["firebase","getAllProducts","dispatch","database","ref","child","get","then","snapshot","exists","data","val","console","log","Object","values","type","payload","catch","error"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,uBAArB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,SAAQC,QAAD,IAAc;AACnBF,IAAAA,QAAQ,CACLG,QADH,GAEGC,GAFH,CAEO,GAFP,EAGGC,KAHH,CAGS,WAHT,EAIGC,GAJH,GAKGC,IALH,CAKSC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,MAAT,EAAJ,EAAuB;AACrB,YAAIC,IAAI,GAAGF,QAAQ,CAACG,GAAT,EAAX;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,MAAP,CAAcL,IAAd,CAAZ;AACAR,QAAAA,QAAQ,CAAC;AAAEc,UAAAA,IAAI,EAAE,YAAR;AAAsBC,UAAAA,OAAO,EAAEH,MAAM,CAACC,MAAP,CAAcL,IAAd;AAA/B,SAAD,CAAR;AACD,OAJD,MAIO;AACLE,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AACF,KAbH,EAcGK,KAdH,CAcUC,KAAD,IAAW;AAChBP,MAAAA,OAAO,CAACO,KAAR,CAAcA,KAAd;AACD,KAhBH;AAiBD,GAlBD;AAmBD,CApBM,C,CAqBP;AACA;AACA;AACA;AACA","sourcesContent":["import firebase from \"../../config/firebase\";\n\nexport const getAllProducts = () => {\n  return (dispatch) => {\n    firebase\n      .database()\n      .ref(\"/\")\n      .child(\"allassets\")\n      .get()\n      .then((snapshot) => {\n        if (snapshot.exists()) {\n          var data = snapshot.val();\n          console.log(Object.values(data));\n          dispatch({ type: \"SETPRODUCT\", payload: Object.values(data) });\n        } else {\n          console.log(\"No data available\");\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n};\n//   export const filterCategory = (category) => {\n//     return(dispatch) => {\n//      dispatch({type: 'FILTERCATEGOR', payload: category})\n//    }\n//   }\n"]},"metadata":{},"sourceType":"module"}